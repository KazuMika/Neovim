snippet _8
	#
	# FileName:     CMakeLists
	# Author:       8ucchiman
	# CreatedDate:  2023-07-27 13:18:13
	# LastModified: 2023-03-29 18:30:18 +0900
	# Reference:    https://qiita.com/shohirose/items/45fb49c6b429e8b204ac
	#               https://cmake.org/cmake/help/git-master/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES
	# Description:  ---
	#


snippet _8static
	# Reference:    https://qiita.com/shohirose/items/45fb49c6b429e8b204ac
	#               https://cmake.org/cmake/help/git-master/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES
	####################
	# 静的ライブラリ作成
	####################
	cmake_minimum_required(VERSION 3.13)
	project(test_cmake CXX)     # test_cmakeプロジェクトをc++で作成
	# hello.cppとgood_morning.cppをコンパイルして静的ライブラリlibgreetings.aを作成
	add_library(greetings STATIC hello.cpp good_morning.cpp)
	# a.outという実行ファイルをmain.cppから作成
	add_executable(a.out main.cpp)
	# a.outを作成する際にlibgreetings.aをリンク
	target_link_libraries(a.out greetings)

snippet _8dynamic
	# Reference:    https://qiita.com/shohirose/items/45fb49c6b429e8b204ac
	#               https://cmake.org/cmake/help/git-master/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES
	####################
	# 動的ライブラリ作成
	####################
	cmake_minimum_required(VERSION 3.13)
	project(test_cmake CXX)
	# hello.cppとgood_morning.cppをコンパイルして共有ライブラリlibgreetings.soを作成
	add_library(greetings SHARED hello.cpp good_morning.cpp)
	add_executable(a.out main.cpp)
	# a.outを作成する際にlibgreetings.soをリンク
	target_link_libraries(a.out greetings)

snippet _8library
	# Reference:    https://qiita.com/shohirose/items/45fb49c6b429e8b204ac
	#               https://cmake.org/cmake/help/git-master/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES
	####################
	# 各ライブラリ毎に静的、動的を指定する
	# cmake -S . -B build -DGREETINGS_BUILD_SHARED_LIBS=ON
	####################
	# GREETINGS_BUILD_SHARED_LIBSというオプションを作成。デフォルトをOFFに設定。
	option(GREETINGS_BUILD_SHARED_LIBS "build greetings as a shared library" OFF)
	
	if (GREETINGS_BUILD_SHARED_LIBS)
	  add_library(greetings SHARED hello.cpp good_morning.cpp)
	else()
	  add_library(greetings STATIC hello.cpp good_morning.cpp)
	endif()

snippet _8subdirectory
	# Reference:    https://qiita.com/shohirose/items/45fb49c6b429e8b204ac
	#               https://cmake.org/cmake/help/git-master/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES
	####################
	# サブディレクトリ登録
	####################
	add_subdirectory(src)
	add_subdirectory(test)

snippet _8setcompileoption
	# Reference:    https://qiita.com/shohirose/items/45fb49c6b429e8b204ac
	#               https://cmake.org/cmake/help/git-master/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES
	####################
	# コンパイルオプション設定
	####################
	# 最適化・警告などのオプション
	target_compile_options(a.out PUBLIC -O2 -Wall)
	
	# C++の標準規格の指定
	target_compile_features(a.out PUBLIC cxx_std_17)
	
	# マクロ
	target_compile_definitions(a.out PUBLIC MY_ORIGINAL_MACRO_CONST=1)

snippet _8buildtype
	# Reference:    https://qiita.com/shohirose/items/45fb49c6b429e8b204ac
	#               https://cmake.org/cmake/help/git-master/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES
	####################
	# ビルドタイプの指定
	####################
	# $ cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
	# $ cmake --build build

snippet _8generator
	# Reference:    https://qiita.com/shohirose/items/45fb49c6b429e8b204ac
	#               https://cmake.org/cmake/help/git-master/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES
	####################
	# ジェネレーター式
	# コンパイラによってコンパイルオプションが異なる。
	# e.g. gcc,           -Wall
	#      visual studio, /W4
	####################
	cmake_minimum_required(VERSION 3.13)
	project(cmake_example CXX)
	
	add_executable(a.out main.cpp)
	target_compile_options(a.out PUBLIC
	  # ビルドタイプによって変更する
	  $<$<CONFIG:Release>: ...>          # Release
	  $<$<CONFIG:Debug>: ...>            # Debug
	  $<$<CONFIG:RelWithDebgInfo>: ...>  # RelWithDebInfo
	
	  # OSに応じて変更する
	  $<$<PLATFORM_ID:Darwin>: ...>   # Mac
	  $<$<PLATFORM_ID:Linux>: ...>    # Linux
	  $<$<PLATFORM_ID:Windows>: ...>  # Windows
	
	  # コンパイラによって変更する
	  $<$<CXX_COMPILER_ID:MSVC>: ...>      # MSVC
	  $<$<CXX_COMPILER_ID:GNU>: ...>       # GCC
	  $<$<CXX_COMPILER_ID:Clang>: ...>     # LLVM Clang
	  $<$<CXX_COMPILER_ID:Intel>: ...>     # Intel classic
	  $<$<CXX_COMPILER_ID:IntelLLVM>: ...> # Intel one-API
	  )
	target_compile_definitions(a.out PUBLIC
	  $<$<NOT:$<CONFIG:Debug>>: ...>     # Debugビルド以外
	  )

snippet _8librarylink
	# Reference:    https://qiita.com/shohirose/items/45fb49c6b429e8b204ac
	#               https://cmake.org/cmake/help/git-master/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES
	####################
	# ライブラリのリンク
	####################
	# $ g++ -o target main.cpp -lhoge
	#
	# -> 
	target_link_libraries(target PUBLIC -lhoge)
